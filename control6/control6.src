#include "../syslog/syslog.h"
dnl   Copyright (c) 2009 by Jochen Roessner <jochen@lugrot.de>
dnl   This program is free software; you can redistribute it and/or modify
dnl   it under the terms of the GNU General Public License version 2 or later
dnl   as published by the Free Software Foundation.
dnl  
dnl   This program is distributed in the hope that it will be useful,
dnl   but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl   GNU General Public License for more details.
dnl  
dnl   You should have received a copy of the GNU General Public License
dnl   along with this program; if not, write to the Free Software
dnl   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
dnl  
dnl   For more information on the GPL, please go to:
dnl   http://www.gnu.org/copyleft/gpl.html
dnl

enum sensor { Kessel,Vorlauf,Wasser,WasserRuecklauf,WasserZulauf,AussenNord,Ruecklauf,Ofen };

CONTROL_START

dnl // dnl ist der kommentar fuer m4. Zum aktivieren der beispiele einfach das dnl entfernen.

dnl  // dieses Beispiel zeigt anhand meiner Heizungssteuerung wie man zeitverzoegert die Wasserheizung
dnl  // schaltet. Das geschieht bei einer Temperatur groesser als 55,0 Grad und nur zwischen 6 und 11 Uhr 
  THREAD(warmwasser_high)
      WAIT(60 * 15);
      PIN_SET(Warmwasser);
      THREAD_WAIT(warmwasser_high);
  THREAD_END(warmwasser_high)
  ON PIN_LOW(Wasserladepumpe) && CLOCK_MIN && KTY_GET(Wasser) > 550 DO THREAD_START(warmwasser_high) END

dnl  // das Beispiel zeigt wie man sofort (einmal in der Minute) auf auf die Wassertemperatur reagiert und schaltet
dnl  // der Pinname "Warmwasser" stammt aus der Konfig vom named_pin
dnl  ON CLOCK_MIN && CLOCK_HOUR > 6 && CLOCK_HOUR < 19 && KTY_GET(Wasser) < 400 DO 
dnl    PIN_CLEAR(Warmwasser);
dnl  END
  ON CLOCK_MIN == 0 && CLOCK_HOUR == 5 DO 
    Wassersoll = 50;
    Wasserdiff = 15;
  END
  ON CLOCK_MIN == 30 && CLOCK_HOUR == 11 DO 
    Wassersoll = 52;
    Wasserdiff = 20;
  END
  ON CLOCK_MIN == 0 && CLOCK_HOUR == 23 DO 
    Wassersoll = 58;
    Wasserdiff = 10;
  END

  GLOBAL(lastzulauf, uint16_t);
  GLOBAL(ausgleichscount, uint8_t);
  THREAD(zulauf)
      ON ADC_GET(WasserZulauf) < (lastzulauf - 1) DO
	//PIN_SET(Wasserpumpe);
	UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 0 2 0\n");
	WAIT(120);
	//PIN_CLEAR(Wasserpumpe);
	UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 0 0 0\n");
	WAIT(60 * 5)
	lastzulauf = ADC_GET(WasserZulauf);
      END
      ON ADC_GET(4) > lastzulauf || ( CLOCK_HOUR > 0 && CLOCK_HOUR < 7 ) || ausgleichscount == 150 DO
	lastzulauf = ADC_GET(WasserZulauf);
	ausgleichscount = 0;
      END
      ausgleichscount++;
      WAIT(4)
  THREAD_END(zulauf)

  ECMD_GLOBAL(Wassersoll, 52);
  ECMD_GLOBAL(Wasserdiff, 15);
  ECMD_GLOBAL(Wasserforce, 0);
  ECMD_GLOBAL(ladepumpe_state, 0);
  ECMD_GLOBAL(badpumpe_state, 0);
  ECMD_GLOBAL(heizpumpe_state, 0);
  ECMD_GLOBAL(pumpe_select, 0); 
  ECMD_GLOBAL(automatik, 1);
  ECMD_GLOBAL(machwasser, 0);
  ECMD_GLOBAL(hysterese, 0);

  THREAD(ofenregelung)
    SYSLOG("<182>ofenregelung laeuft\n");
    ON KTY_GET(Ofen) > 600 && PIN_HIGH(Heizung) && PIN_HIGH(Warmwasser) DO
	SYSLOG("<182>ofen wird geregelt\n");
	if ( KTY_GET(Ofen) > 760 ) {
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 2 0\n");
	    heizpumpe_state = 0xff;
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 2 0\n");
	    badpumpe_state = 0xff;
	    SYSLOG("<182>heizpumpe voll (ofenhoch) on\n");
          /* ofen ist sehr heiss und kessel ist heiss genug und das wasser ist kÃ¤lter als der kessel und vorlauf */
	  if ( KTY_GET(Kessel) > 650 && (KTY_GET(Wasser) + 30) <  KTY_GET(Kessel) && KTY_GET(Wasser) < KTY_GET(Vorlauf) ) {
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 02 00\n");
	    ladepumpe_state = 0xff;
	    SYSLOG("<182>wasserpumpe voll (ofenhoch) on\n");
	  }
	}
	else if(automatik == 1){
	  SYSLOG("<182>ofen in automatik\n");
	  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3\n");
	  #ifdef syslog_support
	  syslog_sendf("UESENDGET_BUFFER_LEN %i\n", UESENDGET_BUFFER_LEN());
	  #endif
	  ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("3: 01 00\n")) DO
	    ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("3: 00 00\n")) DO
	      ladepumpe_state = 0;
	    END
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1\n");
	    ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("1: 01 00\n")) DO
	      ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("1: 00 00\n")) DO
		heizpumpe_state = 0;
	      END
	      UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2\n");
	      ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("2: 01 00\n")) DO
		ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("2: 00 00\n")) DO
		  badpumpe_state = 0;
		END

		if (KTY_GET(Wasser) > (Wassersoll * 10 + Wasserdiff) &&  Wasserforce == 0 ) {
		  machwasser = 0;
		}
		if (  /* wassertemp ist kleiner als es soll */ 
		  KTY_GET(Wasser) < (Wassersoll * 10 -  Wasserdiff) ||
		  /* es soll nur warm wasser gemacht werden */ 
		  Wasserforce != 0  ||
		  /*der ofen wird kalt und der kessel ist noch heiss genug */
		  ( KTY_GET(Ofen) < 640 &&  KTY_GET(Kessel) > (KTY_GET(Wasser) + 40) ) ) {
		  machwasser = 1;
		}

		if(machwasser) {
		  SYSLOG("<182>soll wasser warm machen\n");
		  if (KTY_GET(Kessel) > 690 && Wasserforce == 0) {
		    if(ladepumpe_state != 11){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 38 FF\n");
		      if(UESENDGET_BUFFER_LEN() == 9) ladepumpe_state = 11;
		      SYSLOG("<182>wasserpumpe state 11\n");
		    }
		    if ( KTY_GET(Kessel) > 730 ) {
		      // 1B~3s, 20~5s, 2E~10s, 40~20s
		      if(badpumpe_state != 3){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 38 FF\n");
			if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 3;
			SYSLOG("<182>badpumpe state 3\n");
		      }
		      if(heizpumpe_state != 3){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 38 4F\n");
			if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 3;
			SYSLOG("<182>heizpumpe state 3\n");
		      }
		    }
		    else {
		      if(badpumpe_state != 1){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 1C FF\n");
			if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 1;
			SYSLOG("<182>badpumpe state 1\n");
		      }
		      if(heizpumpe_state != 1){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 1C 4F\n");
			if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 1;
			SYSLOG("<182>heizpumpe state 1\n");
		      }
		    }
		  }
		  else {
		    if(badpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 0 0\n");
		      if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 0;
		      SYSLOG("<182>badpumpe state 0\n");
		    }
		    if(heizpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
		      if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 0;
		      SYSLOG("<182>heizpumpe state 0\n");
		    }
		    if ( KTY_GET(Kessel) < (KTY_GET(Wasser) + 40) ) {
		      if(ladepumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 00 00\n");
			if(UESENDGET_BUFFER_LEN() == 9) ladepumpe_state = 0;
			SYSLOG("<182>wasserpumpe state 0 (kessel tief)\n");
		      }
		    }
		    else if ( KTY_GET(Kessel) > (635 - hysterese) || KTY_GET(Kessel) > (KTY_GET(Wasser) + 150)) {
		      if(ladepumpe_state != 2){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 38 38\n");
			hysterese = 10;
			if(UESENDGET_BUFFER_LEN() == 9) ladepumpe_state = 2;
			SYSLOG("<182>wasserpumpe state 2\n");
		      }
		    }
		    else{
		      if(ladepumpe_state != 1){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 24 38\n");
			if(UESENDGET_BUFFER_LEN() == 9) ladepumpe_state = 1;
			SYSLOG("<182>wasserpumpe state 1\n");
		      }
		    }
		  }
		} 
		dnl // ende mach wasser
		else{
		  dnl // heiz zirkulation steuern
		  SYSLOG("<182>soll heizung warm machen\n");
		  if(ladepumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
		    if(UESENDGET_BUFFER_LEN() == 9) ladepumpe_state = 0;
		    SYSLOG("<182>wasserpumpe state 0 (temp erreicht)\n");
		  }
		  if(KTY_GET(Kessel) > 450){
		    if(pumpe_select == 2){
		      dnl // nur die badpumpe einschalten
		      if(heizpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
			if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 0;
			SYSLOG("<182>heizpumpe state 0\n");
		      }
		      if ((KTY_GET(Kessel) + 20) >= KTY_GET(Ofen) || KTY_GET(Ofen) > 710) {
			// 40~20s, 4F~30s, 6F~60s, 88~90s, 9C~120s, C0~180s 
			if(badpumpe_state != 23){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 6F 4F\n");
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 23;
			  SYSLOG("<182>badpumpe state 23\n");
			}
		      }
		      else if ( (KTY_GET(Kessel) + 40 + hysterese) >= KTY_GET(Ofen) && KTY_GET(Kessel) > 550 ) {
			if(badpumpe_state != 22){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 4F AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 22;
			  SYSLOG("<182>badpumpe state 22\n");
			}
		      }
		      else {
			if(badpumpe_state != 21){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 30 AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 21;
			  SYSLOG("<182>badpumpe state 21\n");
			}
		      }
		    }
		    else if(pumpe_select == 1){
		      dnl // nur die heizpumpe einschalten
		      if(badpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 0 0\n");
			if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 0;
			SYSLOG("<182>badpumpe state 0\n");
		      }
		      if ((KTY_GET(Kessel) + 20) >= KTY_GET(Ofen) || KTY_GET(Ofen) > 710) {
			// 40~20s, 4F~30s, 6F~60s, 88~90s, 9C~120s, C0~180s 
			if(heizpumpe_state != 13){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 6F 4F\n");
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 13;
			  SYSLOG("<182>heizpumpe state 13\n");
			}
		      }
		      else if ((KTY_GET(Kessel) + 40 + hysterese) >= KTY_GET(Ofen) && KTY_GET(Kessel) > 550 ) {
			if(heizpumpe_state != 12){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 4F AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 12;
			  SYSLOG("<182>heizpumpe state 12\n");
			}
		      }
		      else {
			if(heizpumpe_state != 11){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 30 AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 11;
			  SYSLOG("<182>heizpumpe state 11\n");
			}
		      }
		    }
		    else {
		      if ((KTY_GET(Kessel) + 20) >= KTY_GET(Ofen) || KTY_GET(Ofen) > 710) {
			// 40~20s, 4F~30s, 6F~60s, 88~90s, 9C~120s, C0~180s 
			if(badpumpe_state != 33){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 6F 4F\n");
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 33;
			  SYSLOG("<182>badpumpe state 33\n");
			}
			if(heizpumpe_state != 33){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 6F 4F\n");
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 33;
			  SYSLOG("<182>heizpumpe state 33\n");
			}
		      }
		      else if ((KTY_GET(Kessel) + 60 + hysterese) >= KTY_GET(Ofen) && KTY_GET(Kessel) > 550 ) {
			if(badpumpe_state != 32){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 3A AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 32;
			  SYSLOG("<182>badpumpe state 32\n");
			}
			if(heizpumpe_state != 32){
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 3A AB\n");
			  hysterese = 20;
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 32;
			  SYSLOG("<182>heizpumpe state 32\n");
			}
		      }
		      else {
			if(badpumpe_state != 31){ 
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 30 AB\n");
			  if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 31;
			  SYSLOG("<182>badpumpe state 31\n");
			}
			if(heizpumpe_state != 31){
			  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 30 AB\n");
			  if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 31;
			  SYSLOG("<182>heizpumpe state 31\n");
			}
		      }

		    }
		  }
		  else {
		    dnl // Kesseltemp unter 450, also pumpen abschalten
		    if(badpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 0 0\n");
		      if(UESENDGET_BUFFER_LEN() == 9) badpumpe_state = 0;
		      SYSLOG("<182>badpumpe state 0\n");
		    }
		    if(heizpumpe_state != 0){ UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
		      if(UESENDGET_BUFFER_LEN() == 9) heizpumpe_state = 0;
		      SYSLOG("<182>heizpumpe state 0\n");
		    }
		  }
		  dnl // ende - heiz zirkulation steuern
		}
	      END
	    END
	  END
	}
      END
      if (hysterese > 0) hysterese--;
    WAIT(15)
  THREAD_END(ofenregelung)



  ON STARTUP DO
      THREAD_START(zulauf);
      THREAD_START(ofenregelung);
      PIN_SET(Warmwasser);
      PIN_SET(Heizung);
  END

  ON CLOCK_MIN == 30 && CLOCK_HOUR == 6 && CLOCK_DOW < 6 && KTY_GET(Wasser) < 370 DO 
    PIN_CLEAR(Warmwasser);
  END
  ON CLOCK_MIN && PIN_LOW(Warmwasser) && PIN_HIGH(Heizung) && KTY_GET(Ofen) < 600 && (KTY_GET(Kessel) - 50) < KTY_GET(Wasser) DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
  END

dnl  ON CLOCK_MIN == 0 && CLOCK_HOUR == 6 && KTY_GET(AussenNord) < 30 && KTY_GET(Wohnzimmer) < 200 DO
dnl    PIN_CLEAR(Heizung);
dnl  END

dnl / pumpe aus wenn der ofen in der nacht abkÃ¼hlt  
  ON CLOCK_MIN % 16 == 0 && CLOCK_HOUR > 0 && CLOCK_HOUR < 5 && KTY_GET(Ofen) < 600 && KTY_GET(Kessel) < 590 DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 0 0\n");
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
    heizpumpe_state = 0;
    badpumpe_state = 0;
    ladepumpe_state = 0;
  END

  ON PIN_FALLING(Heizzirkulationspumpe) DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 1 0\n");
  END
  ON PIN_RISING(Heizzirkulationspumpe) DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
  END
  ON CLOCK_MIN  % 8 == 0 &&  PIN_LOW(Heizung) DO
    ON PIN_LOW(Heizzirkulationspumpe) DO
      UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 1 0\n");
    END
  END

  ON PIN_FALLING(Wasserladepumpe) DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 2 0\n");
  END
  ON PIN_RISING(Wasserladepumpe) && PIN_LOW(Heizung) DO
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
  END
  ON CLOCK_MIN % 8  == 0 && PIN_LOW(Warmwasser) DO
    ON PIN_LOW(Wasserladepumpe) DO
      UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 2 0\n");
    END
  END

dnl // eine globale Variable fuer ecmd verwendet man so
dnl ECMD_GLOBAL(Wassersoll, 20);
dnl ECMD_GLOBAL(Raumsoll, 20);
dnl ON Wassersoll > 30 DO
dnl   Wassersoll = 30;
dnl END
dnl // die ecmd syntax ist "c6 get Wassersoll" oder "c6 set Wassersoll 255"
dnl // die werte koennen von 0 bis 255 gehen.

CONTROL_END

