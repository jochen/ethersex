#include "../syslog/syslog.h"
dnl   Copyright (c) 2009 by Jochen Roessner <jochen@lugrot.de>
dnl   This program is free software; you can redistribute it and/or modify
dnl   it under the terms of the GNU General Public License version 2 or later
dnl   as published by the Free Software Foundation.
dnl  
dnl   This program is distributed in the hope that it will be useful,
dnl   but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl   GNU General Public License for more details.
dnl  
dnl   You should have received a copy of the GNU General Public License
dnl   along with this program; if not, write to the Free Software
dnl   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
dnl  
dnl   For more information on the GPL, please go to:
dnl   http://www.gnu.org/copyleft/gpl.html
dnl

enum sensor { Kessel,Vorlauf,Wasser,WasserRuecklauf,WasserZulauf,AussenNord,Ruecklauf,Ofen };

void heizpumpe_on_send(uint8_t value);
void ladepumpe_on_send(uint8_t value);
uint8_t lade_on_last = 1;
uint8_t lade_off_last= 1;
uint8_t bad_on_last= 1;
uint8_t bad_off_last= 1;
uint8_t heiz_on_last = 1;
uint8_t heiz_off_last = 1;

CONTROL_START

void heizpumpe_on_send(uint8_t value){
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 %X 0\n", value);
    UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 %X 0\n", value);
    bad_on_last = value; bad_off_last = 0;
    heiz_on_last = value; heiz_off_last = 0;
};
void ladepumpe_on_send(uint8_t value){
   UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 %X 0\n", value);
   lade_on_last = value; lade_off_last = 0;
};

dnl // dnl ist der kommentar fuer m4. Zum aktivieren der beispiele einfach das dnl entfernen.

dnl  // dieses Beispiel zeigt anhand meiner Heizungssteuerung wie man zeitverzoegert die Wasserheizung
dnl  // schaltet. Das geschieht bei einer Temperatur groesser als 55,0 Grad und nur zwischen 6 und 11 Uhr 
  THREAD(warmwasser_high)
      WAIT(60 * 15);
      PIN_SET(Warmwasser);
      THREAD_WAIT(warmwasser_high);
  THREAD_END(warmwasser_high)
  ON PIN_LOW(Wasserladepumpe) && CLOCK_MIN && KTY_GET(Wasser) > 550 DO THREAD_START(warmwasser_high) END

dnl  // das Beispiel zeigt wie man sofort (einmal in der Minute) auf auf die Wassertemperatur reagiert und schaltet
dnl  // der Pinname "Warmwasser" stammt aus der Konfig vom named_pin
dnl  ON CLOCK_MIN && CLOCK_HOUR > 6 && CLOCK_HOUR < 19 && KTY_GET(Wasser) < 400 DO 
dnl    PIN_CLEAR(Warmwasser);
dnl  END
  ON CLOCK_MIN == 0 && CLOCK_HOUR == 5 DO 
    Wassersoll = 50;
    Wasserdiff = 20;
  END
  ON CLOCK_MIN == 30 && CLOCK_HOUR == 11 DO 
    Wassersoll = 52;
    Wasserdiff = 25;
  END
  ON CLOCK_MIN == 30 && CLOCK_HOUR == 23 DO 
    Wassersoll = 58;
    Wasserdiff = 15;
  END

  GLOBAL(lastzulauf, uint16_t);
  GLOBAL(ausgleichscount, uint8_t);
  THREAD(zulauf)
      ON ADC_GET(WasserZulauf) < (lastzulauf - 1) DO
	//PIN_SET(Wasserpumpe);
	UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 0 2 0\n");
	WAIT(120);
	//PIN_CLEAR(Wasserpumpe);
	UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 0 0 0\n");
	WAIT(60 * 5)
	lastzulauf = ADC_GET(WasserZulauf);
      END
      ON ADC_GET(4) > lastzulauf || ( CLOCK_HOUR > 0 && CLOCK_HOUR < 7 ) || ausgleichscount == 150 DO
	lastzulauf = ADC_GET(WasserZulauf);
	ausgleichscount = 0;
      END
      ausgleichscount++;
      WAIT(4)
  THREAD_END(zulauf)

  ECMD_GLOBAL(Wassersoll, 52);
  ECMD_GLOBAL(Wasserdiff, 25);
  ECMD_GLOBAL(Wasserforce, 0);

  ECMD_GLOBAL(lade_on, 0);
  ECMD_GLOBAL(lade_off, 0);
  ECMD_GLOBAL(bad_on, 0);
  ECMD_GLOBAL(bad_off, 0);
  ECMD_GLOBAL(heiz_on, 0);
  ECMD_GLOBAL(heiz_off, 0);

  ECMD_GLOBAL(pumpe_select, 0); 
  ECMD_GLOBAL(automatik, 1);
  ECMD_GLOBAL(machwasser, 0);

  THREAD(ofenregelung)
    dnl SYSLOG("<182>ofenregelung laeuft\n");
    ON KTY_GET(Ofen) > 600 && PIN_HIGH(Heizung) && PIN_HIGH(Warmwasser) DO
	SYSLOG("o");
	if ( KTY_GET(Ofen) > 770 ) {
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 2 0\n");
	    heiz_on = 0x2; heiz_off = 0;
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 2 0\n");
	    bad_on = 0x2; bad_off = 0;
	    SYSLOG("<182>heiz voll (ofenhoch)\n");
          /* ofen ist sehr heiss und kessel ist heiss genug und das wasser ist kÃ¤lter als der kessel und vorlauf */
	  if ( KTY_GET(Kessel) > 700 && (KTY_GET(Wasser) + 50) <  KTY_GET(Kessel)) {
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 02 00\n");
	    lade_on = 0x2; lade_off = 0;
	    SYSLOG("<182>wasser voll (ofenhoch)\n");
	  }
	}
	else if(automatik == 1){
	  dnl SYSLOG("<182>ofen in automatik\n");
	  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3\n");

	  dnl SYSLOG("<182>getlen %i\n", UESENDGET_BUFFER_LEN());
	  
	  ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("3: 01 00\n")) DO
	    ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("3: 00 00\n")) DO
	      lade_on = 0; lade_off = 0;
	    END
	    UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1\n");
	    ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("1: 01 00\n")) DO
	      ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("1: 00 00\n")) DO
		heiz_on = 0; heiz_off = 0;
	      END
	      UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2\n");
	      ON UESENDGET_BUFFER_LEN() == 9 && strcmp_P(UESENDGET_BUFFER(), PSTR("2: 01 00\n")) DO
		ON UESENDGET_BUFFER_LEN() == 9 && !strcmp_P(UESENDGET_BUFFER(), PSTR("2: 00 00\n")) DO
		  bad_on = 0; bad_off = 0;
		END
		// keine der pumpen war von hand eingeschalten
		dnl SYSLOG("<182>keine pumpe im handbetrieb\n");
		// test ob das wasser NOCH warm gemacht werden muss
		if (KTY_GET(Wasser) > (Wassersoll * 10 + Wasserdiff) &&  Wasserforce == 0 ) {
		  machwasser = 0;
		}
		/* test ob das brauchwasser warmgemacht werden muss */
		if ( /* wassertemp ist kleiner als es soll */ 
		  KTY_GET(Wasser) < (Wassersoll * 10 -  Wasserdiff) ||
		  /* es soll nur warm wasser gemacht werden */ 
		  Wasserforce != 0  ||
		  /*der ofen wird kalt und der kessel ist noch heiss genug */
		  ( KTY_GET(Ofen) < 640 &&  KTY_GET(Kessel) > (KTY_GET(Wasser) + 40) ) ) {
		  machwasser = 1;
		}

		if(machwasser) {
		  dnl SYSLOG("<182>wasser warm\n");
		  SYSLOG("w");
		  // 1B~3s, 20~5s, 2E~10s, 40~20s
		  // wenn der ofen zu heis wird dann mit wasser aus der heizung abkuehlen
		  if (KTY_GET(Ofen) > 740 && Wasserforce == 0) {
		    lade_on = 0x38; lade_off = 0xFF;
		    bad_on = 0x1C; bad_off = 0x4F;
		    //heiz_on = 0x0; heiz_off = 0x0;
		  }
		  else {
		    bad_on = 0x0; bad_off = 0x0;
		    heiz_on = 0x0; heiz_off = 0x0;
		    if ( KTY_GET(Kessel) < (KTY_GET(Wasser) + 40) ) {
		      lade_on = 0x0; lade_off = 0x0;
		      dnl SYSLOG("<182>wasserpumpe state 0 (kessel tief)\n");
		    }
		    else if ( KTY_GET(Kessel) > 635 || KTY_GET(Kessel) > (KTY_GET(Wasser) + 150)) {
		      lade_on = 0x38; lade_off = 0x38;
		    }
		    else{
		      lade_on = 0x24; lade_off = 0x38;
		    }
		  }
		} 
		dnl // ende mach wasser
		else{
		  dnl // heiz zirkulation steuern
		  dnl SYSLOG("<182>heizung warm\n");
		  lade_on = 0x0; lade_off = 0x0;
		  if(KTY_GET(Kessel) > 450){
		    // 1B~3s, 20~5s, 2E~10s, 40~20s
		    // 4F~30s, 6F~60s, 88~90s, 9C~120s, C0~180s 
		    bad_on = 0x30;
		    heiz_on = 0x30;
		    if ((KTY_GET(Kessel) + 10) >= KTY_GET(Ofen) || KTY_GET(Ofen) > 710) {
		      if (bad_off > 0x20) bad_off -= 2;
		      if (bad_off > 0x80) bad_off = 0x80;
		      heiz_off = bad_off;
		      SYSLOG("<182>kl %X\n", bad_off);
		      //bad_on = 0x6F; bad_off = 0x4F;
		      //heiz_on = 0x6F; heiz_off = 0x4F;
		    }
		    else if ((KTY_GET(Kessel) + 50) >= KTY_GET(Ofen) && KTY_GET(Kessel) > 550 ) {
		      dnl SYSLOG("<182>gl %X %X\n", bad_off, heiz_off);
		      //bad_on = 0x3A; bad_off = 0xAB;
		      //heiz_on = 0x3A; heiz_off = 0xAB;
		      //if (bad_on_last != bad_on || bad_off_last != bad_off ||
		      //      heiz_on_last != heiz_on || heiz_off_last != heiz_off)
		      //  hysterese = 20;
		    }
		    else {
		      if (bad_off < 0xB0) bad_off += 0x8;
		      if (bad_off < 0x50) bad_off = 0x50;
		      heiz_off = bad_off;
		      SYSLOG("<182>gr %X\n", bad_off);
		      //bad_on = 0x30; bad_off = 0xAB;
		      //heiz_on = 0x30; heiz_off = 0xAB;
		    }
		    if(pumpe_select == 2) {
		      heiz_on = 0;heiz_off = 0;
		    }
		    if(pumpe_select == 1) {
		      bad_on = 0;;bad_off = 0;
		    }
		  } 
		  else {
		    bad_on = 0x0; bad_off = 0x0;
		    heiz_on = 0x0; heiz_off = 0x0;
		  }
		  dnl // ende - heiz zirkulation steuern
		}

		if(lade_on_last != lade_on || lade_off_last != lade_off){
		  SYSLOG("<182>lade %X %X\n", lade_on, lade_off);
		  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 %X %X\n", lade_on, lade_off);
		  if(UESENDGET_BUFFER_LEN() == 9) { 
		    lade_on_last = lade_on;
		    lade_off_last = lade_off;
		  }
		}
		if(bad_on_last != bad_on || bad_off_last != bad_off){
		  SYSLOG("<182>bad %X %X\n", bad_on, bad_off);
		  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 %X %X\n", bad_on, bad_off);
		  if(UESENDGET_BUFFER_LEN() == 9) { 
		    bad_on_last = bad_on;
		    bad_off_last = bad_off;
		  }
		}
		if(heiz_on_last != heiz_on || heiz_off_last != heiz_off){
		  SYSLOG("<182>heiz %X %X\n", heiz_on, heiz_off);
		  UESENDGET(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 %X %X\n", heiz_on, heiz_off);
		  if(UESENDGET_BUFFER_LEN() == 9) { 
		    heiz_on_last = heiz_on;
		    heiz_off_last = heiz_off;
		  }
		}
	      END
	    END
	  END
	}
      END
    WAIT(15)
  THREAD_END(ofenregelung)



  ON STARTUP DO
      THREAD_START(zulauf);
      THREAD_START(ofenregelung);
      PIN_SET(Warmwasser);
      PIN_SET(Heizung);
  END

  ON CLOCK_MIN == 30 && CLOCK_HOUR == 6 && CLOCK_DOW < 6 && KTY_GET(Wasser) < 370 DO 
    PIN_CLEAR(Warmwasser);
  END
  ON CLOCK_MIN && PIN_LOW(Warmwasser) && PIN_HIGH(Heizung) && KTY_GET(Ofen) < 600 && (KTY_GET(Kessel) - 50) < KTY_GET(Wasser) DO
    ladepumpe_on_send(0);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
  END

dnl  ON CLOCK_MIN == 0 && CLOCK_HOUR == 6 && KTY_GET(AussenNord) < 30 && KTY_GET(Wohnzimmer) < 200 DO
dnl    PIN_CLEAR(Heizung);
dnl  END

dnl / pumpe aus wenn der ofen in der nacht abkÃ¼hlt  
  ON CLOCK_MIN % 16 == 0 && CLOCK_HOUR > 0 && CLOCK_HOUR < 5 && KTY_GET(Ofen) < 600 && KTY_GET(Kessel) < 590 DO
    heizpumpe_on_send(0);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 2 0 0\n");
    ladepumpe_on_send(0);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
  END

  ON PIN_FALLING(Heizzirkulationspumpe) DO
    heizpumpe_on_send(1);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 1 0\n");
  END
  ON PIN_RISING(Heizzirkulationspumpe) DO
    heizpumpe_on_send(0);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 0 0\n");
  END
  ON CLOCK_MIN  % 8 == 0 &&  PIN_LOW(Heizung) DO
    ON PIN_LOW(Heizzirkulationspumpe) DO
      heizpumpe_on_send(1);
      dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 1 1 0\n");
    END
  END

  ON PIN_FALLING(Wasserladepumpe) DO
    ladepumpe_on_send(2);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 2 0\n");
  END
  ON PIN_RISING(Wasserladepumpe) && PIN_LOW(Heizung) DO
    ladepumpe_on_send(0);
    dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 0 0\n");
  END
  ON CLOCK_MIN % 8  == 0 && PIN_LOW(Warmwasser) DO
    ON PIN_LOW(Wasserladepumpe) DO
      ladepumpe_on_send(2);
      dnl UESEND(2001:6f8:1209:23:0:0:ff00:ee11, "pumpe 3 2 0\n");
    END
  END

dnl // eine globale Variable fuer ecmd verwendet man so
dnl ECMD_GLOBAL(Wassersoll, 20);
dnl ECMD_GLOBAL(Raumsoll, 20);
dnl ON Wassersoll > 30 DO
dnl   Wassersoll = 30;
dnl END
dnl // die ecmd syntax ist "c6 get Wassersoll" oder "c6 set Wassersoll 255"
dnl // die werte koennen von 0 bis 255 gehen.

CONTROL_END

